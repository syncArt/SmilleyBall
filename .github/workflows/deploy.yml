name: Deploy Smileyball Frontend

on:
  workflow_dispatch:  # Workflow uruchamiany tylko rÄ™cznie

jobs:
  deploy-smileyball:
    runs-on: ubuntu-latest
    environment: production
    env:
      SMILEYBALL_CANISTER_ID: ${{ secrets.SMILEYBALL_CANISTER_ID }}
      WALLET_CANISTER_ID: ${{ secrets.WALLET_CANISTER_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dfx
        uses: dfinity/setup-dfx@main

      - name: Confirm successful installation
        run: dfx --version

      - name: Install Smileyball Identity
        env:
          DFX_DEPLOY_KEY: ${{ secrets.DFX_DEPLOY_KEY }}
        run: |
          key_pem=$(mktemp)
          printenv "DFX_DEPLOY_KEY" > "$key_pem"
          dfx identity import --disable-encryption --force smileyball "$key_pem"
          rm "$key_pem"

      - name: Create Smileyball Frontend Canister
        run: dfx canister create smileyball_frontend
        
      - name: Build Smileyball Frontend
        run: dfx build smileyball_frontend

      - name: Deploy Smileyball Frontend
        run: |
          wallet="${{ env.WALLET_CANISTER_ID }}"
          dfx canister --network ic --wallet "$wallet" install --mode upgrade \
            --wasm .dfx/local/canisters/smileyball_frontend/smileyball_frontend.wasm.gz \
            ${{ env.SMILEYBALL_CANISTER_ID }}
